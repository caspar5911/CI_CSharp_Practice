name: Reset AssemblyInfo and csproj Versions

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  reset_versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Reset AssemblyInfo.cs Versions to 1.0.0.0
        run: |
          echo "Finding and resetting AssemblyInfo.cs files..."

          # Find all AssemblyInfo.cs except in bin/obj folders
          find . -type f -name "AssemblyInfo.cs" \
            -not -path "*/bin/*" \
            -not -path "*/obj/*" > assemblyinfo_files.txt

          while IFS= read -r file; do
            echo "Resetting $file"
            sed -i 's/AssemblyFileVersion(".*")/AssemblyFileVersion("1.0.0.0")/' "$file"
            sed -i 's/AssemblyVersion(".*")/AssemblyVersion("1.0.0.0")/' "$file"
          done < assemblyinfo_files.txt

      - name: Reset .csproj Versions to 1.0.0.0
        run: |
          echo "Finding and resetting .csproj files..."

          # Find all .csproj except in bin/obj folders
          find . -type f -name "*.csproj" \
            -not -path "*/bin/*" \
            -not -path "*/obj/*" > csproj_files.txt

          while IFS= read -r file; do
            echo "Resetting $file"
            sed -i 's#<Version>.*</Version>#<Version>1.0.0.0</Version>#' "$file"
            sed -i 's#<AssemblyVersion>.*</AssemblyVersion>#<AssemblyVersion>1.0.0.0</AssemblyVersion>#' "$file"
            sed -i 's#<FileVersion>.*</FileVersion>#<FileVersion>1.0.0.0</FileVersion>#' "$file"
          done < csproj_files.txt

      - name: Commit and Push Changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add .
            git commit -m "Reset all AssemblyInfo.cs and .csproj versions to 1.0.0.0"
            git push
          else
            echo "No changes to commit."
          fi
name: Reset AssemblyInfo and csproj Versions

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  reset_versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Reset AssemblyInfo.cs Versions to 1.0.0.0
        run: |
          echo "Finding and resetting AssemblyInfo.cs files..."

          # Find all AssemblyInfo.cs except in bin/obj folders
          find . -type f -name "AssemblyInfo.cs" \
            -not -path "*/bin/*" \
            -not -path "*/obj/*" > assemblyinfo_files.txt

          while IFS= read -r file; do
            echo "Resetting $file"
            sed -i 's/AssemblyFileVersion(".*")/AssemblyFileVersion("1.0.0.0")/' "$file"
            sed -i 's/AssemblyVersion(".*")/AssemblyVersion("1.0.0.0")/' "$file"
          done < assemblyinfo_files.txt

      - name: Reset .csproj Versions to 1.0.0.0
        run: |
          echo "Finding and resetting .csproj files..."

          # Find all .csproj except in bin/obj folders
          find . -type f -name "*.csproj" \
            -not -path "*/bin/*" \
            -not -path "*/obj/*" > csproj_files.txt

          while IFS= read -r file; do
            echo "Resetting $file"
            sed -i 's#<Version>.*</Version>#<Version>1.0.0.0</Version>#' "$file"
            sed -i 's#<AssemblyVersion>.*</AssemblyVersion>#<AssemblyVersion>1.0.0.0</AssemblyVersion>#' "$file"
            sed -i 's#<FileVersion>.*</FileVersion>#<FileVersion>1.0.0.0</FileVersion>#' "$file"
          done < csproj_files.txt

      - name: Commit and Push Changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add .
            git commit -m "Reset all AssemblyInfo.cs and .csproj versions to 1.0.0.0"
            git push
          else
            echo "No changes to commit."
          fi
