name: Init Tags

on:
  workflow_dispatch:

jobs:
  init-tags:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      - name: Initialize Tags for All Modules
        run: |
          echo "Initializing tags for all modules..."

          # set -x   # Debug: print all commands
          # set +e   # Don't exit script on first error
          find . -type f -name "AssemblyInfo.cs" \
            -not -path "*/bin/*" \
            -not -path "*/obj/*" -print
          # Find all AssemblyInfo.cs files
          find . -type f -name "AssemblyInfo.cs" \
            ! -path "*/bin/*" \
            ! -path "*/obj/*" \
            -exec bash -c "
              for file; do
                module_dir=\$(dirname \"\$file\")
                module_name=\$(basename \"\$(dirname \"\$module_dir\")\")
                
                version=\$(grep -oP 'AssemblyFileVersion\\(\"\\K[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+' \"\$file\")
          
                if [ -n \"\$version\" ]; then
                  tag=\"\${module_name}/v\${version}\"
                  echo \"Checking for tag: \$tag\"
          
                  if git rev-parse \"\$tag\" >/dev/null 2>&1; then
                    echo \"Tag \$tag already exists, skipping.\"
                  else
                    echo \"Creating and pushing tag: \$tag\"
                    git tag -a \"\$tag\" -m \"Initial version for \$module_name\"
                    git push origin \"\$tag\"
                  fi
                else
                  echo \"No version found in \$file, skipping...\"
                fi
              done
            " bash {} +

